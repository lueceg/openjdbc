<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gua.open.mybatis.StockDaoMapper">
    <resultMap id="BaseResultMap" type="com.gua.open.mybatis.dto.StockDao">
        <id column="stock_code" property="stockCode" jdbcType="INTEGER"/>
        <result column="stock_name" property="stockName" jdbcType="VARCHAR"/>
        <result column="continuous_blank_plate_quantity" property="continuousBlankPlateQuantity" jdbcType="VARCHAR"/>
        <result column="total_increase" property="totalIncrease" jdbcType="REAL"/>
        <result column="sign_profit" property="signProfit" jdbcType="REAL"/>
        <result column="market_date" property="marketDate" jdbcType="DATE"/>
        <result column="crawl_date" property="crawlDate" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    stock_code, stock_name, continuous_blank_plate_quantity, total_increase, sign_profit, 
    market_date, crawl_date, modify_time, create_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from stock_eastmoney
        where stock_code = #{stockCode,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_eastmoney
    where stock_code = #{stockCode,jdbcType=INTEGER}
  </delete>
    <delete id="deleteBatch" parameterType="java.util.List">
        delete from stock_eastmoney where stock_code in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>

    </delete>
    <delete id="deleteAll">
        delete from stock_eastmoney
    </delete>
    <insert id="insert" parameterType="com.gua.open.mybatis.dto.StockDao">
    insert into stock_eastmoney (stock_code, stock_name, continuous_blank_plate_quantity, 
      total_increase, sign_profit, market_date, 
      crawl_date, modify_time, create_time
      )
    values (#{stockCode,jdbcType=INTEGER}, #{stockName,jdbcType=VARCHAR}, #{continuousBlankPlateQuantity,jdbcType=VARCHAR}, 
      #{totalIncrease,jdbcType=REAL}, #{signProfit,jdbcType=REAL}, #{marketDate,jdbcType=DATE}, 
      #{crawlDate,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into stock_eastmoney (stock_code, stock_name, continuous_blank_plate_quantity,
        total_increase, sign_profit, market_date,
        crawl_date, modify_time, create_time
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.stockCode},#{item.stockName},#{item.continuousBlankPlateQuantity},#{item.totalIncrease},#{item.signProfit},#{item.marketDate},#{item.crawlDate},
            now(), now())
        </foreach>
    </insert>
    <insert id="updateBatch" parameterType="java.util.List">
        insert into stock_eastmoney (stock_code, stock_name, continuous_blank_plate_quantity,
        total_increase, sign_profit, market_date,
        crawl_date, modify_time
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.stockCode},#{item.stockName},#{item.continuousBlankPlateQuantity},#{item.totalIncrease},#{item.signProfit},#{item.marketDate},#{item.crawlDate},
            now())
        </foreach>
        on duplicate key update
        stock_name = values(stock_name),
        continuous_blank_plate_quantity = values(continuous_blank_plate_quantity),
        total_increase = values(total_increase),
        sign_profit = values(sign_profit),
        market_date = values(market_date),
        crawl_date = values(crawl_date),
        modify_time = now()
    </insert>
    <insert id="insertSelective" parameterType="com.gua.open.mybatis.dto.StockDao">
        insert into stock_eastmoney
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stockCode != null">
                stock_code,
            </if>
            <if test="stockName != null">
                stock_name,
            </if>
            <if test="continuousBlankPlateQuantity != null">
                continuous_blank_plate_quantity,
            </if>
            <if test="totalIncrease != null">
                total_increase,
            </if>
            <if test="signProfit != null">
                sign_profit,
            </if>
            <if test="marketDate != null">
                market_date,
            </if>
            <if test="crawlDate != null">
                crawl_date,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stockCode != null">
                #{stockCode,jdbcType=INTEGER},
            </if>
            <if test="stockName != null">
                #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="continuousBlankPlateQuantity != null">
                #{continuousBlankPlateQuantity,jdbcType=VARCHAR},
            </if>
            <if test="totalIncrease != null">
                #{totalIncrease,jdbcType=REAL},
            </if>
            <if test="signProfit != null">
                #{signProfit,jdbcType=REAL},
            </if>
            <if test="marketDate != null">
                #{marketDate,jdbcType=DATE},
            </if>
            <if test="crawlDate != null">
                #{crawlDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.gua.open.mybatis.dto.StockDao">
        update stock_eastmoney
        <set>
            <if test="stockName != null">
                stock_name = #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="continuousBlankPlateQuantity != null">
                continuous_blank_plate_quantity = #{continuousBlankPlateQuantity,jdbcType=VARCHAR},
            </if>
            <if test="totalIncrease != null">
                total_increase = #{totalIncrease,jdbcType=REAL},
            </if>
            <if test="signProfit != null">
                sign_profit = #{signProfit,jdbcType=REAL},
            </if>
            <if test="marketDate != null">
                market_date = #{marketDate,jdbcType=DATE},
            </if>
            <if test="crawlDate != null">
                crawl_date = #{crawlDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where stock_code = #{stockCode,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gua.open.mybatis.dto.StockDao">
    update stock_eastmoney
    set stock_name = #{stockName,jdbcType=VARCHAR},
      continuous_blank_plate_quantity = #{continuousBlankPlateQuantity,jdbcType=VARCHAR},
      total_increase = #{totalIncrease,jdbcType=REAL},
      sign_profit = #{signProfit,jdbcType=REAL},
      market_date = #{marketDate,jdbcType=DATE},
      crawl_date = #{crawlDate,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where stock_code = #{stockCode,jdbcType=INTEGER}
  </update>

</mapper>